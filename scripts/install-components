#! /usr/bin/env node

const path = require('path')
const shell = require('shelljs')
const async = require('async')

shell.config.verbose = false

const requireInstall = []

const manifest = {
	scripts: [
		'node_modules/anchor-js/anchor.min.js'
	],
	css: [
		'node_modules/ace-css/css/ace.min.css'
	],
	fonts: [
		'node_modules/typopro-web/web/TypoPRO-Hack',
		'node_modules/typopro-web/web/TypoPRO-FiraSans'
	],
	images: []
}

console.log('Installing bower components...')

async.eachSeries(requireInstall, (modulePath, callback) => {
	const moduleName = path.basename(modulePath)
	console.log(`\Installing ${moduleName}...`)
	shell.exec('npm install', {cwd: modulePath}, code => {
		callback(code > 0 ? true : null)
	})
}, err => {
	if (err) {
		console.log('Install failed. Aborting!')
	} else {
		Object.keys(manifest).forEach(key => {
			console.log(`\Copying ${key}...`)

			const dest = (type => {
				switch (type) {
					case 'scripts':
						return 'assets/js/'
					case 'css':
						return 'assets/css/'
					case 'fonts':
						return 'assets/fonts/'
					case 'images':
						return 'assets/images/'
					default:
						throw new Error(`Unrecognised asset type ${type}`)
				}
			})(key)

			manifest[key].forEach(src => {
				const scriptName = path.basename(src)
				console.log(`Copying ${scriptName} to ${dest}...`)
				shell.cp('-R', src, dest)
			})
		})
	}
})
